{"ast":null,"code":"var _jsxFileName = \"/home/besargega/Documents/invoice-maker/src/components/InvoicePage.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { initialInvoice, initialProductLine } from '../data/initialData';\n// import Document from './Document'\n// import Page from './Page'\n// import View from './View'\n// import Text from './Text'\nimport { Font } from '@react-pdf/renderer';\nimport Download from './DownloadPDF';\nimport { Document, Page, Text, View } from '@react-pdf/renderer';\nFont.register({\n  family: 'Nunito',\n  fonts: [{\n    src: 'https://fonts.gstatic.com/s/nunito/v12/XRXV3I6Li01BKofINeaE.ttf'\n  }, {\n    src: 'https://fonts.gstatic.com/s/nunito/v12/XRXW3I6Li01BKofA6sKUYevN.ttf',\n    fontWeight: 600\n  }]\n});\nconst InvoicePage = _ref => {\n  let {\n    data,\n    pdfMode,\n    onChange\n  } = _ref;\n  const [invoice, setInvoice] = useState(data ? {\n    ...data\n  } : {\n    ...initialInvoice\n  });\n  const [subTotal, setSubTotal] = useState();\n  const [saleTax, setSaleTax] = useState();\n  const dateFormat = 'MMM dd, yyyy';\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date();\n  const invoiceDueDate = invoice.invoiceDueDate !== '' ? new Date(invoice.invoiceDueDate) : new Date(invoiceDate.valueOf());\n  if (invoice.invoiceDueDate === '') {\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 30);\n  }\n  const handleChange = (name, value) => {\n    if (name !== 'productLines') {\n      const newInvoice = {\n        ...invoice\n      };\n      if (name === 'logoWidth' && typeof value === 'number') {\n        newInvoice[name] = value;\n      } else if (name !== 'logoWidth' && typeof value === 'string') {\n        newInvoice[name] = value;\n      }\n      setInvoice(newInvoice);\n    }\n  };\n  const handleProductLineChange = (index, name, value) => {\n    const productLines = invoice.productLines.map((productLine, i) => {\n      if (i === index) {\n        const newProductLine = {\n          ...productLine\n        };\n        if (name === 'description' || name === 'size') {\n          newProductLine[name] = value;\n        } else {\n          if (value[value.length - 1] === '.' || value[value.length - 1] === '0' && value.includes('.')) {\n            newProductLine[name] = value;\n          } else {\n            const n = parseFloat(value);\n            newProductLine[name] = (n ? n : 0).toString();\n          }\n        }\n        return newProductLine;\n      }\n      return {\n        ...productLine\n      };\n    });\n    setInvoice({\n      ...invoice,\n      productLines\n    });\n  };\n  const handleRemove = i => {\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i);\n    setInvoice({\n      ...invoice,\n      productLines\n    });\n  };\n  const handleAdd = () => {\n    const productLines = [...invoice.productLines, {\n      ...initialProductLine\n    }];\n    setInvoice({\n      ...invoice,\n      productLines\n    });\n  };\n  const calculateAmount = (quantity, rate) => {\n    const quantityNumber = parseFloat(quantity);\n    const rateNumber = parseFloat(rate);\n    const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0;\n    return amount.toFixed(2);\n  };\n  useEffect(() => {\n    let subTotal = 0;\n    invoice.productLines.forEach(productLine => {\n      const quantityNumber = parseFloat(productLine.quantity);\n      const rateNumber = parseFloat(productLine.rate);\n      const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0;\n      subTotal += amount;\n    });\n    setSubTotal(subTotal);\n  }, [invoice.productLines]);\n  useEffect(() => {\n    const match = invoice.taxLabel.match(/(\\d+)%/);\n    const taxRate = match ? parseFloat(match[1]) : 0;\n    const saleTax = subTotal ? subTotal * taxRate / 100 : 0;\n    setSaleTax(saleTax);\n  }, [subTotal, invoice.taxLabel]);\n  useEffect(() => {\n    if (onChange) {\n      onChange(invoice);\n    }\n  }, [onChange, invoice]);\n  return /*#__PURE__*/React.createElement(Document, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Download, {\n    data: invoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Page, {\n    size: \"A4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Section #1\")), /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Section #2\"))))\n  // <Document pdfMode={pdfMode}>\n  //   <Page className=\"invoice-wrapper\" pdfMode={pdfMode}>\n  //     {!pdfMode && <Download data={invoice} />}\n\n  //     <View className=\"flex\" pdfMode={pdfMode}>\n  //       <View className=\"w-50\" pdfMode={pdfMode}>\n  //         <img\n  //           className=\"logo\"\n  //           style={{maxWidth: '150px'}}\n  //           src={logo}\n  //         />\n  //         <EditableInput\n  //           className=\"fs-20 bold\"\n  //           placeholder=\"Kompania juaj\"\n  //           value={invoice.companyName}\n  //           onChange={(value) => handleChange('companyName', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //         <EditableInput\n  //           placeholder=\"Your Name\"\n  //           value={invoice.name}\n  //           onChange={(value) => handleChange('name', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //         <EditableInput\n  //           placeholder=\"Company's Address\"\n  //           value={invoice.companyAddress}\n  //           onChange={(value) => handleChange('companyAddress', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //         <EditableInput\n  //           placeholder=\"City, State Zip\"\n  //           value={invoice.companyAddress2}\n  //           onChange={(value) => handleChange('companyAddress2', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //       </View>\n  //       <View className=\"w-50\" pdfMode={pdfMode}>\n  //         <EditableInput\n  //           className=\"fs-45 right bold\"\n  //           placeholder=\"Invoice\"\n  //           value={invoice.title}\n  //           onChange={(value) => handleChange('title', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //       </View>\n  //     </View>\n\n  //     <View className=\"flex mt-40\" pdfMode={pdfMode}>\n  //       <View className=\"w-55\" pdfMode={pdfMode}>\n  //         <EditableInput\n  //           className=\"bold dark mb-5\"\n  //           value={'Porosi per :'}\n  //           onChange={(value) => handleChange('billTo', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //         <EditableInput\n  //           placeholder=\"Emri klientit\"\n  //           value={invoice.clientName}\n  //           onChange={(value) => handleChange('clientName', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //         <EditableInput\n  //           placeholder=\"Adresa e klientit\"\n  //           value={invoice.clientAddress}\n  //           onChange={(value) => handleChange('clientAddress', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //       </View>\n  //       <View className=\"w-45\" pdfMode={pdfMode}>\n  //         <View className=\"flex mb-5\" pdfMode={pdfMode}>\n  //           <View className=\"w-40\" pdfMode={pdfMode}>\n  //             <EditableInput\n  //               className=\"bold dark mb-5\"\n  //               value={'Fatura Nr:'}\n  //               onChange={(value) => handleChange('invoiceTitleLabel', value)}\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //           <View className=\"w-60\" pdfMode={pdfMode}>\n  //             <EditableInput\n  //               placeholder=\"13141\"\n  //               value={invoice.invoiceTitle}\n  //               onChange={(value) => handleChange('invoiceTitle', value)}\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //         </View>\n  //         <View className=\"flex mb-5\" pdfMode={pdfMode}>\n  //           <View className=\"w-40\" pdfMode={pdfMode}>\n  //             <EditableInput\n  //               className=\"bold dark mb-5\"\n  //               value={'Data Fatures:'}\n  //               onChange={(value) => handleChange('invoiceDateLabel', value)}\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //           <View className=\"w-60\" pdfMode={pdfMode}>\n  //             <EditableCalendarInput\n  //               value={format(invoiceDate, dateFormat)}\n  //               selected={invoiceDate}\n  //               onChange={(date) =>\n  //                 handleChange(\n  //                   'invoiceDate',\n  //                   date && !Array.isArray(date) ? format(date, dateFormat) : ''\n  //                 )\n  //               }\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //         </View>\n  //         <View className=\"flex mb-5\" pdfMode={pdfMode}>\n  //           <View className=\"w-40\" pdfMode={pdfMode}>\n  //             <EditableInput\n  //               className=\"bold dark mb-5\"\n  //               value={invoice.invoiceDueDateLabel}\n  //               onChange={(value) => handleChange('invoiceDueDateLabel', value)}\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //           <View className=\"w-60\" pdfMode={pdfMode}>\n  //             <EditableCalendarInput\n  //               value={format(invoiceDueDate, dateFormat)}\n  //               selected={invoiceDueDate}\n  //               onChange={(date) =>\n  //                 handleChange(\n  //                   'invoiceDueDate',\n  //                   date && !Array.isArray(date) ? format(date, dateFormat) : ''\n  //                 )\n  //               }\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //         </View>\n  //       </View>\n  //     </View>\n\n  //     <View className=\"mt-30 bg-dark flex\" pdfMode={pdfMode}>\n  //       <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n  //         <EditableInput\n  //           className=\"white bold right\"\n  //           value={'Cope'}\n  //           onChange={(value) => handleChange('productLineQuantity', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //       </View>\n  //       <View className=\"w-18 p-4-8\" pdfMode={pdfMode}>\n  //         <EditableInput\n  //           className=\"white bold right\"\n  //           value={'Permasa'}\n  //           pdfMode={pdfMode}\n  //         />\n  //       </View>\n  //       <View className=\"w-40 p-4-8\" pdfMode={pdfMode}>\n  //         <EditableInput\n  //           className=\"white bold\"\n  //           value={'Artikulli'}\n  //           onChange={(value) => handleChange('productLineDescription', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //       </View>\n  //       <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n  //         <EditableInput\n  //           className=\"white bold right\"\n  //           value={'Cmimi'}\n  //           onChange={(value) => handleChange('productLineQuantityRate', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //       </View>\n  //       <View className=\"w-18 p-4-8\" pdfMode={pdfMode}>\n  //         <EditableInput\n  //           className=\"white bold right\"\n  //           value={'Totali'}\n  //           onChange={(value) => handleChange('productLineQuantityAmount', value)}\n  //           pdfMode={pdfMode}\n  //         />\n  //       </View>\n  //     </View>\n\n  //     {invoice.productLines.map((productLine, i) => {\n  //       return pdfMode && productLine.description === '' ? (\n  //         <Text key={i}></Text>\n  //       ) : (\n  //         <View key={i} className=\"row flex\" pdfMode={pdfMode}>\n  //           <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\n  //             <EditableInput\n  //               className=\"dark right\"\n  //               value={productLine.quantity}\n  //               onChange={(value) => handleProductLineChange(i, 'quantity', value)}\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //           <View className=\"w-18 p-4-8 pb-10\" pdfMode={pdfMode}>\n  //             <EditableInput\n  //               className=\"dark right\"\n  //               value={productLine.size}\n  //               onChange={(value) => handleProductLineChange(i, 'size', value)}\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //           <View className=\"w-40 p-4-8 pb-10\" pdfMode={pdfMode}>\n  //             <EditableTextarea\n  //               className=\"dark\"\n  //               rows={2}\n  //               placeholder=\"Pershkrimi artikullit\"\n  //               value={productLine.description}\n  //               onChange={(value) => handleProductLineChange(i, 'description', value)}\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //           <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\n  //             <EditableInput\n  //               className=\"dark right\"\n  //               value={productLine.rate +' Lek'}\n  //               onChange={(value) => handleProductLineChange(i, 'rate', value)}\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //           <View className=\"w-18 p-4-8 pb-10\" pdfMode={pdfMode}>\n  //             <Text className=\"dark right\" pdfMode={pdfMode}>\n  //               {calculateAmount(productLine.quantity, productLine.rate) + ' Lek'}\n  //             </Text>\n  //           </View>\n  //           {!pdfMode && (\n  //             <button\n  //               className=\"link row__remove\"\n  //               aria-label=\"Fshi rrjesht\"\n  //               title=\"Fshi rrjesht\"\n  //               onClick={() => handleRemove(i)}\n  //             >\n  //               <span className=\"icon icon-remove bg-red\"></span>\n  //             </button>\n  //           )}\n  //         </View>\n  //       )\n  //     })}\n\n  //     <View className=\"flex\" pdfMode={pdfMode}>\n  //       <View className=\"w-50 mt-10\" pdfMode={pdfMode}>\n  //         {!pdfMode && (\n  //           <button className=\"link\" onClick={handleAdd}>\n  //             <span className=\"icon icon-add bg-green mr-10\"></span>\n  //             Shto Artikull te Ri\n  //           </button>\n  //         )}\n  //       </View>\n  //       <View className=\"w-100 mt-40\" pdfMode={pdfMode}>\n  //         <View className=\"flex bg-gray p-5\" pdfMode={pdfMode}>\n  //           <View className=\"w-20 p-5\" pdfMode={pdfMode}>\n  //             <EditableInput\n  //               className=\"bold dark mb-5\"\n  //               value={'TOTALI :'}\n  //               onChange={(value) => handleChange('totalLabel', value)}\n  //               pdfMode={pdfMode}\n  //             />\n  //           </View>\n  //           <View className=\"w-80 p-5 flex\" pdfMode={pdfMode}>\n  //             <Text className=\"right bold dark w-auto\" pdfMode={pdfMode}>\n  //               {(typeof subTotal !== 'undefined' && typeof saleTax !== 'undefined'\n  //                 ? subTotal \n  //                 : 0\n  //               ).toFixed(2) + ' Lek'}\n  //             </Text>\n  //           </View>\n  //         </View>\n  //       </View>\n  //     </View>\n  //     <View className=\"mt-20\" pdfMode={pdfMode}>\n  //       <EditableTextarea\n  //         className=\"w-100\"\n  //         rows={2}\n  //         value={invoice.notes}\n  //         onChange={(value) => handleChange('notes', value)}\n  //         pdfMode={pdfMode}\n  //       />\n  //     </View>\n  //   </Page>\n  // </Document>\n  ;\n};\n\nexport default InvoicePage;","map":{"version":3,"names":["React","useState","useEffect","initialInvoice","initialProductLine","Font","Download","Document","Page","Text","View","register","family","fonts","src","fontWeight","InvoicePage","_ref","data","pdfMode","onChange","invoice","setInvoice","subTotal","setSubTotal","saleTax","setSaleTax","dateFormat","invoiceDate","Date","invoiceDueDate","valueOf","setDate","getDate","handleChange","name","value","newInvoice","handleProductLineChange","index","productLines","map","productLine","i","newProductLine","length","includes","n","parseFloat","toString","handleRemove","filter","handleAdd","calculateAmount","quantity","rate","quantityNumber","rateNumber","amount","toFixed","forEach","match","taxLabel","taxRate","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","size"],"sources":["/home/besargega/Documents/invoice-maker/src/components/InvoicePage.tsx"],"sourcesContent":["import React, { FC, useState, useEffect } from 'react'\nimport { Invoice, ProductLine } from '../data/types'\nimport { initialInvoice, initialProductLine } from '../data/initialData'\nimport EditableInput from './EditableInput'\nimport EditableTextarea from './EditableTextarea'\nimport EditableCalendarInput from './EditableCalendarInput'\n// import Document from './Document'\n// import Page from './Page'\n// import View from './View'\n// import Text from './Text'\nimport { Font } from '@react-pdf/renderer'\nimport Download from './DownloadPDF'\nimport format from 'date-fns/format'\nimport logo from '../images/logo.jpg'\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\n\n\n\nFont.register({\n  family: 'Nunito',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXV3I6Li01BKofINeaE.ttf' },\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXW3I6Li01BKofA6sKUYevN.ttf', fontWeight: 600 },\n  ],\n})\n\ninterface Props {\n  data?: Invoice\n  pdfMode?: boolean\n  onChange?: (invoice: Invoice) => void\n}\n\nconst InvoicePage: FC<Props> = ({ data, pdfMode, onChange }) => {\n  const [invoice, setInvoice] = useState<Invoice>(data ? { ...data } : { ...initialInvoice })\n  const [subTotal, setSubTotal] = useState<number>()\n  const [saleTax, setSaleTax] = useState<number>()\n\n  const dateFormat = 'MMM dd, yyyy'\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date()\n  const invoiceDueDate =\n    invoice.invoiceDueDate !== ''\n      ? new Date(invoice.invoiceDueDate)\n      : new Date(invoiceDate.valueOf())\n\n  if (invoice.invoiceDueDate === '') {\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 30)\n  }\n\n  const handleChange = (name: keyof Invoice, value: string | number) => {\n    if (name !== 'productLines') {\n      const newInvoice = { ...invoice }\n\n      if (name === 'logoWidth' && typeof value === 'number') {\n        newInvoice[name] = value\n      } else if (name !== 'logoWidth' && typeof value === 'string') {\n        newInvoice[name] = value\n      }\n\n      setInvoice(newInvoice)\n    }\n  }\n\n  const handleProductLineChange = (index: number, name: keyof ProductLine, value: string) => {\n    const productLines = invoice.productLines.map((productLine, i) => {\n      if (i === index) {\n        const newProductLine = { ...productLine }\n\n        if (name === 'description' || name === 'size') {\n          newProductLine[name] = value\n        } else {\n          if (\n            value[value.length - 1] === '.' ||\n            (value[value.length - 1] === '0' && value.includes('.'))\n          ) {\n            newProductLine[name] = value\n          } else {\n            const n = parseFloat(value)\n\n            newProductLine[name] = (n ? n : 0).toString()\n          }\n        }\n\n        return newProductLine\n      }\n\n      return { ...productLine }\n    })\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleRemove = (i: number) => {\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i)\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleAdd = () => {\n    const productLines = [...invoice.productLines, { ...initialProductLine }]\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const calculateAmount = (quantity: string, rate: string) => {\n    const quantityNumber = parseFloat(quantity)\n    const rateNumber = parseFloat(rate)\n    const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\n\n    return amount.toFixed(2)\n  }\n\n  useEffect(() => {\n    let subTotal = 0\n\n    invoice.productLines.forEach((productLine) => {\n      const quantityNumber = parseFloat(productLine.quantity)\n      const rateNumber = parseFloat(productLine.rate)\n      const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\n\n      subTotal += amount\n    })\n\n    setSubTotal(subTotal)\n  }, [invoice.productLines])\n\n  useEffect(() => {\n    const match = invoice.taxLabel.match(/(\\d+)%/)\n    const taxRate = match ? parseFloat(match[1]) : 0\n    const saleTax = subTotal ? (subTotal * taxRate) / 100 : 0\n\n    setSaleTax(saleTax)\n  }, [subTotal, invoice.taxLabel])\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(invoice)\n    }\n  }, [onChange, invoice])\n\n  return (\n    <Document>\n      <Download data={invoice} />\n      <Page size=\"A4\" >\n        <View >\n          <Text>Section #1</Text>\n        </View>\n        <View >\n          <Text>Section #2</Text>\n        </View>\n      </Page>\n    </Document>\n    // <Document pdfMode={pdfMode}>\n    //   <Page className=\"invoice-wrapper\" pdfMode={pdfMode}>\n    //     {!pdfMode && <Download data={invoice} />}\n\n    //     <View className=\"flex\" pdfMode={pdfMode}>\n    //       <View className=\"w-50\" pdfMode={pdfMode}>\n    //         <img\n    //           className=\"logo\"\n    //           style={{maxWidth: '150px'}}\n    //           src={logo}\n    //         />\n    //         <EditableInput\n    //           className=\"fs-20 bold\"\n    //           placeholder=\"Kompania juaj\"\n    //           value={invoice.companyName}\n    //           onChange={(value) => handleChange('companyName', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //         <EditableInput\n    //           placeholder=\"Your Name\"\n    //           value={invoice.name}\n    //           onChange={(value) => handleChange('name', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //         <EditableInput\n    //           placeholder=\"Company's Address\"\n    //           value={invoice.companyAddress}\n    //           onChange={(value) => handleChange('companyAddress', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //         <EditableInput\n    //           placeholder=\"City, State Zip\"\n    //           value={invoice.companyAddress2}\n    //           onChange={(value) => handleChange('companyAddress2', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //       </View>\n    //       <View className=\"w-50\" pdfMode={pdfMode}>\n    //         <EditableInput\n    //           className=\"fs-45 right bold\"\n    //           placeholder=\"Invoice\"\n    //           value={invoice.title}\n    //           onChange={(value) => handleChange('title', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //       </View>\n    //     </View>\n\n    //     <View className=\"flex mt-40\" pdfMode={pdfMode}>\n    //       <View className=\"w-55\" pdfMode={pdfMode}>\n    //         <EditableInput\n    //           className=\"bold dark mb-5\"\n    //           value={'Porosi per :'}\n    //           onChange={(value) => handleChange('billTo', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //         <EditableInput\n    //           placeholder=\"Emri klientit\"\n    //           value={invoice.clientName}\n    //           onChange={(value) => handleChange('clientName', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //         <EditableInput\n    //           placeholder=\"Adresa e klientit\"\n    //           value={invoice.clientAddress}\n    //           onChange={(value) => handleChange('clientAddress', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //       </View>\n    //       <View className=\"w-45\" pdfMode={pdfMode}>\n    //         <View className=\"flex mb-5\" pdfMode={pdfMode}>\n    //           <View className=\"w-40\" pdfMode={pdfMode}>\n    //             <EditableInput\n    //               className=\"bold dark mb-5\"\n    //               value={'Fatura Nr:'}\n    //               onChange={(value) => handleChange('invoiceTitleLabel', value)}\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //           <View className=\"w-60\" pdfMode={pdfMode}>\n    //             <EditableInput\n    //               placeholder=\"13141\"\n    //               value={invoice.invoiceTitle}\n    //               onChange={(value) => handleChange('invoiceTitle', value)}\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //         </View>\n    //         <View className=\"flex mb-5\" pdfMode={pdfMode}>\n    //           <View className=\"w-40\" pdfMode={pdfMode}>\n    //             <EditableInput\n    //               className=\"bold dark mb-5\"\n    //               value={'Data Fatures:'}\n    //               onChange={(value) => handleChange('invoiceDateLabel', value)}\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //           <View className=\"w-60\" pdfMode={pdfMode}>\n    //             <EditableCalendarInput\n    //               value={format(invoiceDate, dateFormat)}\n    //               selected={invoiceDate}\n    //               onChange={(date) =>\n    //                 handleChange(\n    //                   'invoiceDate',\n    //                   date && !Array.isArray(date) ? format(date, dateFormat) : ''\n    //                 )\n    //               }\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //         </View>\n    //         <View className=\"flex mb-5\" pdfMode={pdfMode}>\n    //           <View className=\"w-40\" pdfMode={pdfMode}>\n    //             <EditableInput\n    //               className=\"bold dark mb-5\"\n    //               value={invoice.invoiceDueDateLabel}\n    //               onChange={(value) => handleChange('invoiceDueDateLabel', value)}\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //           <View className=\"w-60\" pdfMode={pdfMode}>\n    //             <EditableCalendarInput\n    //               value={format(invoiceDueDate, dateFormat)}\n    //               selected={invoiceDueDate}\n    //               onChange={(date) =>\n    //                 handleChange(\n    //                   'invoiceDueDate',\n    //                   date && !Array.isArray(date) ? format(date, dateFormat) : ''\n    //                 )\n    //               }\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //         </View>\n    //       </View>\n    //     </View>\n\n    //     <View className=\"mt-30 bg-dark flex\" pdfMode={pdfMode}>\n    //       <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n    //         <EditableInput\n    //           className=\"white bold right\"\n    //           value={'Cope'}\n    //           onChange={(value) => handleChange('productLineQuantity', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //       </View>\n    //       <View className=\"w-18 p-4-8\" pdfMode={pdfMode}>\n    //         <EditableInput\n    //           className=\"white bold right\"\n    //           value={'Permasa'}\n    //           pdfMode={pdfMode}\n    //         />\n    //       </View>\n    //       <View className=\"w-40 p-4-8\" pdfMode={pdfMode}>\n    //         <EditableInput\n    //           className=\"white bold\"\n    //           value={'Artikulli'}\n    //           onChange={(value) => handleChange('productLineDescription', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //       </View>\n    //       <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n    //         <EditableInput\n    //           className=\"white bold right\"\n    //           value={'Cmimi'}\n    //           onChange={(value) => handleChange('productLineQuantityRate', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //       </View>\n    //       <View className=\"w-18 p-4-8\" pdfMode={pdfMode}>\n    //         <EditableInput\n    //           className=\"white bold right\"\n    //           value={'Totali'}\n    //           onChange={(value) => handleChange('productLineQuantityAmount', value)}\n    //           pdfMode={pdfMode}\n    //         />\n    //       </View>\n    //     </View>\n\n    //     {invoice.productLines.map((productLine, i) => {\n    //       return pdfMode && productLine.description === '' ? (\n    //         <Text key={i}></Text>\n    //       ) : (\n    //         <View key={i} className=\"row flex\" pdfMode={pdfMode}>\n    //           <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\n    //             <EditableInput\n    //               className=\"dark right\"\n    //               value={productLine.quantity}\n    //               onChange={(value) => handleProductLineChange(i, 'quantity', value)}\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //           <View className=\"w-18 p-4-8 pb-10\" pdfMode={pdfMode}>\n    //             <EditableInput\n    //               className=\"dark right\"\n    //               value={productLine.size}\n    //               onChange={(value) => handleProductLineChange(i, 'size', value)}\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //           <View className=\"w-40 p-4-8 pb-10\" pdfMode={pdfMode}>\n    //             <EditableTextarea\n    //               className=\"dark\"\n    //               rows={2}\n    //               placeholder=\"Pershkrimi artikullit\"\n    //               value={productLine.description}\n    //               onChange={(value) => handleProductLineChange(i, 'description', value)}\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //           <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\n    //             <EditableInput\n    //               className=\"dark right\"\n    //               value={productLine.rate +' Lek'}\n    //               onChange={(value) => handleProductLineChange(i, 'rate', value)}\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //           <View className=\"w-18 p-4-8 pb-10\" pdfMode={pdfMode}>\n    //             <Text className=\"dark right\" pdfMode={pdfMode}>\n    //               {calculateAmount(productLine.quantity, productLine.rate) + ' Lek'}\n    //             </Text>\n    //           </View>\n    //           {!pdfMode && (\n    //             <button\n    //               className=\"link row__remove\"\n    //               aria-label=\"Fshi rrjesht\"\n    //               title=\"Fshi rrjesht\"\n    //               onClick={() => handleRemove(i)}\n    //             >\n    //               <span className=\"icon icon-remove bg-red\"></span>\n    //             </button>\n    //           )}\n    //         </View>\n    //       )\n    //     })}\n\n    //     <View className=\"flex\" pdfMode={pdfMode}>\n    //       <View className=\"w-50 mt-10\" pdfMode={pdfMode}>\n    //         {!pdfMode && (\n    //           <button className=\"link\" onClick={handleAdd}>\n    //             <span className=\"icon icon-add bg-green mr-10\"></span>\n    //             Shto Artikull te Ri\n    //           </button>\n    //         )}\n    //       </View>\n    //       <View className=\"w-100 mt-40\" pdfMode={pdfMode}>\n    //         <View className=\"flex bg-gray p-5\" pdfMode={pdfMode}>\n    //           <View className=\"w-20 p-5\" pdfMode={pdfMode}>\n    //             <EditableInput\n    //               className=\"bold dark mb-5\"\n    //               value={'TOTALI :'}\n    //               onChange={(value) => handleChange('totalLabel', value)}\n    //               pdfMode={pdfMode}\n    //             />\n    //           </View>\n    //           <View className=\"w-80 p-5 flex\" pdfMode={pdfMode}>\n    //             <Text className=\"right bold dark w-auto\" pdfMode={pdfMode}>\n    //               {(typeof subTotal !== 'undefined' && typeof saleTax !== 'undefined'\n    //                 ? subTotal \n    //                 : 0\n    //               ).toFixed(2) + ' Lek'}\n    //             </Text>\n    //           </View>\n    //         </View>\n    //       </View>\n    //     </View>\n    //     <View className=\"mt-20\" pdfMode={pdfMode}>\n    //       <EditableTextarea\n    //         className=\"w-100\"\n    //         rows={2}\n    //         value={invoice.notes}\n    //         onChange={(value) => handleChange('notes', value)}\n    //         pdfMode={pdfMode}\n    //       />\n    //     </View>\n    //   </Page>\n    // </Document>\n  )\n}\n\nexport default InvoicePage\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}