{"ast":null,"code":"var _jsxFileName = \"/home/besargega/Documents/react-invoice-generator/src/components/EditableSelect.tsx\";\nimport React, { useState } from 'react';\nimport { Text } from '@react-pdf/renderer';\nimport compose from '../styles/compose';\nconst EditableSelect = _ref => {\n  let {\n    className,\n    options,\n    placeholder,\n    value,\n    onChange,\n    pdfMode\n  } = _ref;\n  const [isEditing, setIsEditing] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, pdfMode ? /*#__PURE__*/React.createElement(Text, {\n    style: compose('span ' + (className ? className : '')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, value) : /*#__PURE__*/React.createElement(React.Fragment, null, isEditing ? /*#__PURE__*/React.createElement(\"select\", {\n    className: 'select ' + (className ? className : ''),\n    value: value,\n    onChange: onChange ? e => onChange(e.target.value) : undefined,\n    onBlur: () => setIsEditing(false),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, options === null || options === void 0 ? void 0 : options.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.text,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, option.text))) : /*#__PURE__*/React.createElement(\"input\", {\n    readOnly: true,\n    type: \"text\",\n    className: 'input ' + (className ? className : ''),\n    value: value || '',\n    placeholder: placeholder || '',\n    onFocus: () => setIsEditing(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })));\n};\nexport default EditableSelect;","map":{"version":3,"names":["React","useState","Text","compose","EditableSelect","_ref","className","options","placeholder","value","onChange","pdfMode","isEditing","setIsEditing","createElement","Fragment","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","e","target","undefined","onBlur","autoFocus","map","option","key","text","readOnly","type","onFocus"],"sources":["/home/besargega/Documents/react-invoice-generator/src/components/EditableSelect.tsx"],"sourcesContent":["import React, { FC, useState } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\nexport interface SelectOption {\n  value: string\n  text: string\n}\n\ninterface Props {\n  className?: string\n  options?: SelectOption[]\n  placeholder?: string\n  value?: string\n  onChange?: (value: string) => void\n  pdfMode?: boolean\n}\n\nconst EditableSelect: FC<Props> = ({\n  className,\n  options,\n  placeholder,\n  value,\n  onChange,\n  pdfMode,\n}) => {\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <>\n          {isEditing ? (\n            <select\n              className={'select ' + (className ? className : '')}\n              value={value}\n              onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n              onBlur={() => setIsEditing(false)}\n              autoFocus={true}\n            >\n              {options?.map((option) => (\n                <option key={option.text} value={option.value}>\n                  {option.text}\n                </option>\n              ))}\n            </select>\n          ) : (\n            <input\n              readOnly={true}\n              type=\"text\"\n              className={'input ' + (className ? className : '')}\n              value={value || ''}\n              placeholder={placeholder || ''}\n              onFocus={() => setIsEditing(true)}\n            />\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default EditableSelect\n"],"mappings":";AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,mBAAmB;AAgBvC,MAAMC,cAAyB,GAAGC,IAAA,IAO5B;EAAA,IAP6B;IACjCC,SAAS;IACTC,OAAO;IACPC,WAAW;IACXC,KAAK;IACLC,QAAQ;IACRC;EACF,CAAC,GAAAN,IAAA;EACC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAE1D,oBACED,KAAA,CAAAc,aAAA,CAAAd,KAAA,CAAAe,QAAA,QACGJ,OAAO,gBACNX,KAAA,CAAAc,aAAA,CAACZ,IAAI;IAACc,KAAK,EAAEb,OAAO,CAAC,OAAO,IAAIG,SAAS,GAAGA,SAAS,GAAG,EAAE,CAAC,CAAE;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEb,KAAK,CAAQ,gBAE5ET,KAAA,CAAAc,aAAA,CAAAd,KAAA,CAAAe,QAAA,QACGH,SAAS,gBACRZ,KAAA,CAAAc,aAAA;IACER,SAAS,EAAE,SAAS,IAAIA,SAAS,GAAGA,SAAS,GAAG,EAAE,CAAE;IACpDG,KAAK,EAAEA,KAAM;IACbC,QAAQ,EAAEA,QAAQ,GAAIa,CAAC,IAAKb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACf,KAAK,CAAC,GAAGgB,SAAU;IACjEC,MAAM,EAAEA,CAAA,KAAMb,YAAY,CAAC,KAAK,CAAE;IAClCc,SAAS,EAAE,IAAK;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEff,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEqB,GAAG,CAAEC,MAAM,iBACnB7B,KAAA,CAAAc,aAAA;IAAQgB,GAAG,EAAED,MAAM,CAACE,IAAK;IAACtB,KAAK,EAAEoB,MAAM,CAACpB,KAAM;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3CO,MAAM,CAACE,IAAI,CAEf,CAAC,CACK,gBAET/B,KAAA,CAAAc,aAAA;IACEkB,QAAQ,EAAE,IAAK;IACfC,IAAI,EAAC,MAAM;IACX3B,SAAS,EAAE,QAAQ,IAAIA,SAAS,GAAGA,SAAS,GAAG,EAAE,CAAE;IACnDG,KAAK,EAAEA,KAAK,IAAI,EAAG;IACnBD,WAAW,EAAEA,WAAW,IAAI,EAAG;IAC/B0B,OAAO,EAAEA,CAAA,KAAMrB,YAAY,CAAC,IAAI,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAErC,CAEJ,CACA;AAEP,CAAC;AAED,eAAelB,cAAc"},"metadata":{},"sourceType":"module"}